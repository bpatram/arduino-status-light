/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev at Mon Dec 18 01:38:12 2017. */

#ifndef PB_COMMANDS_PB_H_INCLUDED
#define PB_COMMANDS_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _OffRequest {
    pb_callback_t relay;
/* @@protoc_insertion_point(struct:OffRequest) */
} OffRequest;

typedef struct _OnRequest {
    pb_callback_t relay;
/* @@protoc_insertion_point(struct:OnRequest) */
} OnRequest;

typedef struct _StatusResponse {
    bool relayOne;
    bool relayTwo;
    bool relayThree;
    bool relayFour;
/* @@protoc_insertion_point(struct:StatusResponse) */
} StatusResponse;

/* Default values for struct fields */

/* Initializer values for message structs */
#define StatusResponse_init_default              {0, 0, 0, 0}
#define OffRequest_init_default                  {{{NULL}, NULL}}
#define OnRequest_init_default                   {{{NULL}, NULL}}
#define StatusResponse_init_zero                 {0, 0, 0, 0}
#define OffRequest_init_zero                     {{{NULL}, NULL}}
#define OnRequest_init_zero                      {{{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define OffRequest_relay_tag                     1
#define OnRequest_relay_tag                      1
#define StatusResponse_relayOne_tag              1
#define StatusResponse_relayTwo_tag              2
#define StatusResponse_relayThree_tag            3
#define StatusResponse_relayFour_tag             4

/* Struct field encoding specification for nanopb */
extern const pb_field_t StatusResponse_fields[5];
extern const pb_field_t OffRequest_fields[2];
extern const pb_field_t OnRequest_fields[2];

/* Maximum encoded size of messages (where known) */
#define StatusResponse_size                      8
/* OffRequest_size depends on runtime parameters */
/* OnRequest_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define COMMANDS_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
